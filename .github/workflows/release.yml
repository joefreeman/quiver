name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  verify-and-publish:
    name: Verify and publish to npm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Extract version from tag
        id: tag_version
        run: |
          TAG_VERSION=${GITHUB_REF#refs/tags/v}
          echo "tag_version=$TAG_VERSION" >> $GITHUB_OUTPUT
          echo "Tag version: $TAG_VERSION"

      - name: Extract version from Cargo.toml
        id: cargo_version
        run: |
          CARGO_VERSION=$(grep '^version = ' Cargo.toml | head -1 | sed 's/version = "\(.*\)"/\1/')
          echo "cargo_version=$CARGO_VERSION" >> $GITHUB_OUTPUT
          echo "Cargo.toml version: $CARGO_VERSION"

      - name: Verify versions match
        run: |
          if [ "${{ steps.tag_version.outputs.tag_version }}" != "${{ steps.cargo_version.outputs.cargo_version }}" ]; then
            echo "ERROR: Version mismatch!"
            echo "  Tag version:        ${{ steps.tag_version.outputs.tag_version }}"
            echo "  Cargo.toml version: ${{ steps.cargo_version.outputs.cargo_version }}"
            exit 1
          fi
          echo "Versions match: ${{ steps.cargo_version.outputs.cargo_version }}"

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: wasm32-unknown-unknown

      - name: Setup Rust cache
        uses: Swatinem/rust-cache@v2

      - name: Install wasm-pack
        run: curl https://rustwasm.github.io/wasm-pack/installer/init.sh -sSf | sh

      - name: Build WASM
        run: cd quiver-web && ./build.sh

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          registry-url: "https://registry.npmjs.org"

      - name: Publish to npm
        run: |
          cd quiver-web/pkg
          npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
